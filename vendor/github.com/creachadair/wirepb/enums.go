// Code generated by enumgen. DO NOT EDIT.

package wirepb

// Type is a protobuf wire type code.
type Type struct{ _Type uint8 }

// Enum returns the name of the enumeration type for Type.
func (Type) Enum() string { return "Type" }

// String returns the string representation of Type v.
func (v Type) String() string { return _str_Type[v._Type] }

// Valid reports whether v is a valid non-zero Type value.
func (v Type) Valid() bool { return v._Type > 0 && int(v._Type) < len(_str_Type) }

// Index returns the integer index of Type v.
func (v Type) Index() int { return _idx_Type[v._Type] }

// Values for low-level wire types.
var (
	_str_Type = []string{"<invalid>", "Varint", "I64", "Len", "StartGroup", "EndGroup", "I32"}
	_idx_Type = []int{0, 0, 1, 2, 3, 4, 5}

	Invalid    = Type{0}
	Varint     = Type{1} // Base 128 varint
	I64        = Type{2} // 64-bit fixed-width integer
	Len        = Type{3} // Length-prefixed string
	StartGroup = Type{4} // Group start marker (obsolete, unused)
	EndGroup   = Type{5} // Group end marker (obsolete, unused)
	I32        = Type{6} // 32-bit fixed-width integer
)
